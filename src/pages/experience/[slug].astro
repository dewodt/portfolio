---
import CompanyIcon from "@/components/icons/CompanyIcon.astro";
import DetailBack from "@/components/ui/detail/DetailBack.astro";
import DetailImage from "@/components/ui/detail/DetailImage.astro";
import DetailLiCustom from "@/components/ui/detail/DetailLiCustom.astro";
import DetailLiDateRange from "@/components/ui/detail/DetailLiDateRange.astro";
import DetailLiDeployment from "@/components/ui/detail/DetailLiDeployment.astro";
import DetailLiRepository from "@/components/ui/detail/DetailLiRepository.astro";
import DetailTitle from "@/components/ui/detail/DetailTitle.astro";
import CustomPortableText from "@/components/ui/portable-text/CustomPortableText.astro";
import LayoutBase from "@/layouts/LayoutBase.astro";
import {
  sanityClient,
  allExperiencesQuery,
  experienceDetailQuery,
} from "@/lib/query";
import {
  type AllExperiencesQueryResult,
  type ExperienceDetailQueryResult,
} from "@/types/sanity";

export const getStaticPaths = async () => {
  // Get all experience from CMS
  const allExperienceData =
    await sanityClient.fetch<AllExperiencesQueryResult>(allExperiencesQuery);

  const paths = allExperienceData.map((project) => ({
    params: {
      slug: project.slug.current,
    },
  }));

  return paths;
};

// Get data from CMS
const experienceDetailData =
  await sanityClient.fetch<ExperienceDetailQueryResult>(experienceDetailQuery, {
    slug: Astro.params.slug,
  });

if (!experienceDetailData) {
  throw new Error("Data not found");
}
---

<LayoutBase
  title={`${experienceDetailData.title} at ${experienceDetailData.company} | Dewantoro Triatmojo`}
  description={experienceDetailData.description}
>
  <main class="flex flex-auto justify-center px-5 py-12 sm:p-12 lg:p-16">
    <div class="flex w-full max-w-xl flex-col gap-4 lg:max-w-3xl lg:gap-6">
      {/* Back Button */}
      <DetailBack href="/experience" />

      <article class="flex flex-col items-start gap-5 lg:gap-7">
        {/* Header Section */}
        <header class="flex w-full flex-col gap-4 lg:gap-6">
          {/* Title */}
          <DetailTitle>
            {experienceDetailData.title}
          </DetailTitle>

          {/* Metadata */}
          <ul class="flex flex-col items-start gap-3 lg:gap-4">
            <DetailLiCustom>
              <CompanyIcon class="size-5 stroke-secondary lg:size-6" />
              <span>
                {experienceDetailData.company}
              </span>
            </DetailLiCustom>

            <DetailLiDateRange
              dateRange={experienceDetailData.dateRange}
              isEmptyEndDateShowNow={true}
            />

            {/* Repository URLS */}
            {
              experienceDetailData.repositoryLinks &&
                experienceDetailData.repositoryLinks.map((repository) => (
                  <DetailLiRepository repository={repository} />
                ))
            }

            {/* Deployment URLS */}
            {
              experienceDetailData.deploymentLinks &&
                experienceDetailData.deploymentLinks.map((deployment) => (
                  <DetailLiDeployment deployment={deployment} />
                ))
            }
          </ul>

          {/* Preview Image (Usually project logo) */}
          <DetailImage
            src={experienceDetailData.image.url!}
            alt={experienceDetailData.image.alt}
          />
        </header>

        {/* Content Section */}
        <section class="w-full">
          {/* Content */}
          <CustomPortableText value={experienceDetailData.content} />
        </section>
      </article>
    </div>
  </main>
</LayoutBase>
