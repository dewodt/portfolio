---
import CalendarIcon from "@/components/icons/CalendarIcon.astro";
import ChevronLeftIcon from "@/components/icons/ChevronLeftIcon.astro";
import CustomPortableText from "@/components/ui/portable-text/CustomPortableText.astro";
import Layout from "@/layouts/Layout.astro";
import { sanityClient, awardDetailQuery, allAwardsQuery } from "@/lib/query";
import { getFormattedDate } from "@/lib/utils";
import {
  type AllAwardsQueryResult,
  type AwardDetailQueryResult,
} from "@/types/sanity";

export const getStaticPaths = async () => {
  // Get all awards from CMS
  const allAwardsData =
    await sanityClient.fetch<AllAwardsQueryResult>(allAwardsQuery);

  const paths = allAwardsData.map((award) => ({
    params: {
      slug: award.slug.current,
    },
  }));

  return paths;
};

// Get data from CMS
const awardDetailData = await sanityClient.fetch<AwardDetailQueryResult>(
  awardDetailQuery,
  { slug: Astro.params.slug },
);

if (!awardDetailData) {
  throw new Error("Data not found");
}
---

<Layout title={awardDetailData.title} description={awardDetailData.description}>
  <main class="flex flex-auto justify-center px-5 py-12 sm:p-12 lg:p-16">
    <article class="flex w-full max-w-3xl flex-col gap-5 lg:gap-7">
      {/* Header Section */}
      <section class="flex flex-col gap-4 lg:gap-6">
        {/* Back Button */}
        <a href="/awards" class="flex w-fit items-center gap-1 text-primary">
          <ChevronLeftIcon class="size-5" />
          <span class="text-base font-medium leading-none">Back</span>
        </a>

        <div class="flex flex-col gap-3 lg:gap-5">
          {/* Title */}
          <h1 class="text-3xl font-bold text-secondary lg:text-5xl">
            {awardDetailData.title}
          </h1>

          {/* Metadata */}
          <ul class="flex flex-col gap-3 lg:gap-4">
            {/* Issued by */}
            <li class="text-base font-semibold text-secondary lg:text-lg">
              Issued by {awardDetailData.issuer}
            </li>

            {/* Date */}
            <li class="flex flex-row items-center gap-2">
              <CalendarIcon class="size-5 lg:size-6" />

              <time
                datetime={awardDetailData.date}
                class="text-base font-medium leading-none text-secondary lg:text-lg lg:leading-none"
              >
                {getFormattedDate(awardDetailData.date)}
              </time>
            </li>
          </ul>
        </div>
      </section>

      {/* Content Section */}
      <section>
        {/* Content */}
        <CustomPortableText value={awardDetailData.content} />
      </section>
    </article>
  </main>
</Layout>
