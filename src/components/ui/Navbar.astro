---
import MenuIcon from "../icons/MenuIcon.astro";
import XIcon from "../icons/XIcon.astro";

interface NavigationPath {
  label: string;
  url: string;
}

// List of paths
const paths: NavigationPath[] = [
  { label: "Home", url: "/" },
  { label: "Projects", url: "/projects" },
  { label: "Experience", url: "/experience" },
  { label: "Awards", url: "/awards" },
  { label: "Blog", url: "/blog" },
];

// Current page
const currentPath = Astro.url.pathname;

// isActive callback
const isActive = (navbarPath: string) => {
  if (navbarPath === "/") {
    return navbarPath === currentPath;
  } else {
    return currentPath.startsWith(navbarPath);
  }
};
---

<!-- Blur -->
<div
  class="fixed inset-x-0 top-0 z-30 h-12 w-full bg-gradient-to-b from-background to-transparent backdrop-blur-lg [-webkit-mask-image:linear-gradient(to_bottom,black,transparent)]"
>
</div>

<!-- Navbar -->
<nav-bar
  class="sticky left-0 right-0 top-0 z-40 sm:left-auto sm:right-auto sm:top-6 sm:mx-auto sm:mt-6"
>
  <header
    class="flex h-20 w-full flex-row items-center justify-between border-b border-border bg-card-darker px-7 py-2 sm:h-fit sm:rounded-full sm:border sm:bg-card-darker sm:p-2"
  >
    {/* Mobile Icon */}
    <a href="/" class="text-2xl font-bold sm:hidden">
      <span class="text-secondary">dewo</span><span class="text-primary"
        >dt</span
      >
    </a>

    {/* Menu Icon Button */}
    <button
      id="button-open-sidebar"
      aria-label="Open Navigation Bar"
      class="flex size-9 sm:hidden"
    >
      <MenuIcon class="size-full stroke-secondary" />
    </button>

    {/* Sidebar */}
    <div
      id="sidebar-container"
      class="fixed bottom-0 right-[-200px] top-0 z-10 flex h-full w-[200px] translate-x-0 flex-col gap-12 border-l border-l-border bg-card-darker py-6 pl-8 pr-6 text-base duration-300 ease-in-out sm:static sm:h-auto sm:w-auto sm:translate-x-0 sm:border-none sm:bg-transparent sm:p-0"
    >
      {/* Close Button */}
      <button
        id="button-close-sidebar"
        aria-label="Close Navigation Bar"
        class="flex size-9 self-end sm:hidden"
      >
        <XIcon class="size-full stroke-secondary" />
      </button>

      {/* Path lists */}
      <nav>
        <ul class="flex flex-col gap-5 sm:flex-row sm:gap-3">
          {
            paths.map((path) => {
              return (
                <li>
                  <a
                    href={path.url}
                    class={`flex text-base sm:rounded-full sm:px-5 sm:py-2 ${
                      isActive(path.url)
                        ? "font-semibold text-secondary sm:bg-primary"
                        : "font-medium text-muted transition-all duration-200 hover:text-secondary sm:hover:bg-primary/35"
                    }`}
                  >
                    {path.label}
                  </a>
                </li>
              );
            })
          }
        </ul>
      </nav>
    </div>

    {/* Side bar opaque background */}
    <div
      id="sidebar-blur"
      class="inset-0 z-0 hidden h-full w-full bg-black bg-opacity-80 sm:hidden"
    >
    </div>
  </header>
</nav-bar>

<script>
  class Navbar extends HTMLElement {
    constructor() {
      super();

      // Open sidebar callback function
      const onOpenSidebar = () => {
        // Select elements
        const body = document.querySelector("body");
        const sidebarBlur = this.querySelector("#sidebar-blur");
        const sidebar = this.querySelector("#sidebar-container");

        // Body transition
        body?.classList.add("overflow-hidden");

        // Blur transition
        sidebarBlur?.classList.remove("hidden");
        sidebarBlur?.classList.add("fixed");

        // Sidebar transition
        sidebar?.classList.remove("translate-x-0");
        sidebar?.classList.add("-translate-x-[200px]");
      };

      // Close sidebar callback function
      const onCloseSidebar = () => {
        // Select elements
        const body = document.querySelector("body");
        const sidebarBlur = this.querySelector("#sidebar-blur");
        const sidebar = this.querySelector("#sidebar-container");

        // Sidebar transition
        sidebar?.classList.remove("-translate-x-[200px]");
        sidebar?.classList.add("translate-x-0");

        // Blur transition
        sidebarBlur?.classList.remove("fixed");
        sidebarBlur?.classList.add("hidden");

        // Body transition
        body?.classList.remove("overflow-hidden");
      };

      // Handle open event from button
      const openButton = this.querySelector("#button-open-sidebar");
      openButton?.addEventListener("click", onOpenSidebar);

      // Handle close event from button
      const closeButton = this.querySelector("#button-close-sidebar");
      closeButton?.addEventListener("click", onCloseSidebar);

      // Handle close event from sidebar blur
      const sidebarBlur = this.querySelector("#sidebar-blur");
      sidebarBlur?.addEventListener("click", onCloseSidebar);
    }
  }

  customElements.define("nav-bar", Navbar);
</script>
