---
import { cva, type VariantProps } from "class-variance-authority";

import { cn } from "@/lib/utils";
import type { HTMLAttributes } from "astro/types";

const buttonVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-secondary hover:bg-primary/90",
        destructive: "bg-destructive text-secondary hover:bg-destructive/90",
        outline: "border border-border bg-background hover:bg-muted",
        secondary: "bg-muted text-black hover:bg-muted/80",
        ghost: "hover:bg-[#1e293b]",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  },
);

interface Props
  extends VariantProps<typeof buttonVariants>,
    HTMLAttributes<"button"> {
  className?: string;
}

const { className, variant, size, ...props } = Astro.props;
---

<button class={cn(buttonVariants({ variant, size, className }))} {...props}>
  <slot />
</button>
