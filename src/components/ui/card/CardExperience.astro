---
import type { AllExperiencesQueryResult } from "@/types/sanity";
import CompanyIcon from "@/components/icons/CompanyIcon.astro";
import CardContainer from "./builder/CardContainer.astro";
import CardImage from "./builder/CardImage.astro";
import CardContent from "./builder/CardContent.astro";
import CardTitle from "./builder/CardTitle.astro";
import CardSubtitle from "./builder/CardSubtitle.astro";
import CardDescription from "./builder/CardDescription.astro";
import CardDateRange from "./builder/CardDateRange.astro";
import CardLiRepository from "./builder/CardLiRepository.astro";
import CardLiDeployment from "./builder/CardLiDeployment.astro";

interface Props {
  experience: AllExperiencesQueryResult[number];
}

const { experience } = Astro.props;
---

<CardContainer
  href={`/experience/${experience.slug.current}`}
  ariaLabel={`Link to experience ${experience.title} at ${experience.company}`}
>
  {/* Card Image */}
  <CardImage src={experience.image.url!} alt={experience.image.alt} />

  {/* Card Content */}
  <CardContent>
    {/* Title */}
    <CardTitle>
      {experience.title}
    </CardTitle>

    {/* Company */}
    <CardSubtitle>
      <CompanyIcon class="size-5" />
      <span>
        {experience.company}
      </span>
    </CardSubtitle>

    {/* Date */}
    <CardDateRange
      dateRange={experience.dateRange}
      isEmptyEndDateShowNow={true}
    />

    {/* Short description */}
    <CardDescription>
      {experience.description}
    </CardDescription>

    {/* Links */}
    {
      (experience.repositoryLinks || experience.deploymentLinks) && (
        <ul class="flex flex-row gap-5">
          {/* First Repo link */}
          {experience.repositoryLinks && (
            <CardLiRepository repository={experience.repositoryLinks[0]} />
          )}

          {/* First Deployment link */}
          {experience.deploymentLinks && (
            <CardLiDeployment deployment={experience.deploymentLinks[0]} />
          )}
        </ul>
      )
    }
  </CardContent>
</CardContainer>
